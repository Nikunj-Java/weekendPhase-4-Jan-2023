************************************************************************
DATA BINDINGS
************************************************************************
1. Class Binding
2. Property Binding
3. Event Binding

------------------------------------------------------------------------
1. Class Bindings
------------------------------------------------------------------------

--prepare one array of products in component and fetch it to html

let's generate one component

> ng g c binding

goto app>binding>binding.component.ts file


products=[{name:"pencile",price:"8.3",available:"21-01-2023",ratings:4.8},
{name:"pen",price:"10",available:"25-01-2023",ratings:4.6},
{name:"eraser",price:"5.0",available:"26-01-2023",ratings:4.9},
{name:"scale",price:"4.5",available:"27-01-2023",ratings:5.0},
{name:"books",price:"11.5",available:"29-01-2023",ratings:4.5},];


now goto> binding.component.html file



<h1>Print JSON Data</h1>

<br>

<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>Name</th><th>Price</th><th>Available</th><th>Ratings</th>
        </tr>
    </thead>
    <tbody>
        <!--NgDirectives eg:*ngFor-->
        <tr *ngFor="let p of products">
            <td>{{p.name}}</td>
            <td>{{p.price}}</td>
            <td>{{p.available}}</td>
            <td>{{p.ratings}}</td>
        </tr>
    </tbody>
</table>


goto>binding.component.ts file  and copy the selector tag and add it to app.component.html file



<h1>MY FIRST ANGULAR APPLICATION</h1>

<app-header></app-header>
<app-footer></app-footer>
<app-binding></app-binding>


[Note: to add bootstratp goto>index.html file and add the css and bundle script from bootstrap.com]


index.html
--------------

<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>Myapp</title>
  <base href="/">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="icon" type="image/x-icon" href="favicon.ico">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css" integrity="sha384-xOolHFLEh07PJGoPkLv1IbcEPTNtaed2xpHsD9ESMhqIYd0nLMwNLD69Npy4HI+N" crossorigin="anonymous">
</head>
<body>
  <app-root></app-root>
  <script src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-Fy6S3B9q64WdZWQUiU+q4/2Lc9npb8tCaSX9FK7E8HnRr0Jz8D6OP9dO5Vg3Q9ct" crossorigin="anonymous"></script>
</body>
</html>




save it and check the output



------------------------------------------------------------------------


Types:
	1. Source(.ts) to View(.html)
	2. View (.html) to Source(.ts)
	3. Source to view to source (Two Way Bindings)


Data bindings can be done in two ways

1. Interpolation {{}}
2. Property Bindings []

goto>bindings>bindings.component.ts file

bindings.component.ts
--------------------------

name:string="NIKUNJ SONI";
url:string="http://www.google.com/";



goto>bindings>bindings.component.html file

bindings.component.html
-----------------------


<hr>
<h2>Let's Bind Data from source(.ts) to view(.html)</h2>
<hr>

<p>{{name}}</p>

<hr>

<h2>Let's Bind the data from source to view Using Property Binding: [] :bind the data with attribute</h2>

<a [href]="url">Connect To Google</a>

save it and check the output


************************************************************************
STYLE BINDING
************************************************************************
prepare one number say 'we' in bindings.component.ts file


we:number=700;


now bind the data in binding .component.html file

<td [style.font-weight]="we">{{p.price}}</td>

save it and check the output


************************************************************************
EVENT BINDING
************************************************************************
prepare one button and div in binding.component.html

binding.component.html
------------------------

<div class="btn btn-primary" (click)="show()">SHOW DIV</div>

<div *ngIf="flag" style="background-color: yellowgreen;">
This is my Div and You have Successfully Implemented EVENT BINDING
</div>

-------------------------

now goto>binding.component.ts file and add the code as below

flag:boolean=false;
show(){
  this.flag=!this.flag;
}

save and check the output


************************************************************************
Class Binding
************************************************************************
prepare one class inside binding.component.css


binding.component.css
-------------------------
.inStock{
    background-color: orange;
    color: white;
    font-size: 15px;
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
    font-weight: 700;
}

------------------------
goto>bidings>bindings.component.html

bindings.component.html
-------------------------

 <td [class.inStock]="true">{{p.name}}</td>


Save it and check the output
